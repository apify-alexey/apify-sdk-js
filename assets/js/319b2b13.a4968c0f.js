"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2978],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4959:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(7294),o=r(9960),a=r(4477),s=r(2263);const i=function(e){var t=e.to,r=e.children,i=(0,a.E)();return(0,s.default)().siteConfig.presets[0][1].docs.disableVersioning?n.createElement(o.default,{to:"/api/"+t},r):n.createElement(o.default,{to:"/api/"+("current"===i.version?"next":i.version)+"/"+t},r)}},9358:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>y,frontMatter:()=>c,metadata:()=>p,toc:()=>d});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=r(1435),i=r(4959);var l=["components"],c={id:"crawl-some-links",title:"Crawl some links on a website"},u=void 0,p={unversionedId:"examples/crawl-some-links",id:"examples/crawl-some-links",title:"Crawl some links on a website",description:"This CheerioCrawler example uses the pseudoUrls property in the enqueueLinks() method to only add links to the RequestQueue queue if they match the specified regular expression.",source:"@site/../docs/examples/crawl_some_links.mdx",sourceDirName:"examples",slug:"/examples/crawl-some-links",permalink:"/apify-sdk-js/docs/examples/crawl-some-links",draft:!1,tags:[],version:"current",lastUpdatedBy:"renovate[bot]",lastUpdatedAt:1659420946,formattedLastUpdatedAt:"Aug 2, 2022",frontMatter:{id:"crawl-some-links",title:"Crawl some links on a website"}},m={},d=[],f={toc:d};function y(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This ",(0,a.kt)(i.Z,{to:"cheerio-crawler/class/CheerioCrawler",mdxType:"ApiLink"},(0,a.kt)("inlineCode",{parentName:"p"},"CheerioCrawler"))," example uses the ",(0,a.kt)(i.Z,{to:"core/class/PseudoUrl",mdxType:"ApiLink"},(0,a.kt)("inlineCode",{parentName:"p"},"pseudoUrls"))," property in the ",(0,a.kt)(i.Z,{to:"cheerio-crawler/interface/CheerioRequestHandlerInputs#enqueueLinks",mdxType:"ApiLink"},(0,a.kt)("inlineCode",{parentName:"p"},"enqueueLinks()"))," method to only add links to the ",(0,a.kt)(i.Z,{to:"core/class/RequestQueue",mdxType:"ApiLink"},(0,a.kt)("inlineCode",{parentName:"p"},"RequestQueue"))," queue if they match the specified regular expression."),(0,a.kt)(s.Z,{className:"language-js",mdxType:"CodeBlock"},"import { CheerioCrawler } from '@crawlee/cheerio';\n\n// Create a CheerioCrawler\nconst crawler = new CheerioCrawler({\n    // Limits the crawler to only 10 requests (do not use if you want to crawl all links)\n    maxRequestsPerCrawl: 10,\n    // Function called for each URL\n    async requestHandler({ request, enqueueLinks }) {\n        console.log(request.url);\n        // Add some links from page to the crawler's RequestQueue\n        await enqueueLinks({\n            pseudoUrls: ['http[s?]://apify.com/[.+]/[.+]'],\n        });\n    },\n});\n\n// Define the starting URL\nawait crawler.addRequests(['https://apify.com/store']);\n\n// Run the crawler\nawait crawler.run();\n"))}y.isMDXComponent=!0}}]);